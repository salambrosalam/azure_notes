This is the notes for exam AZ-400 (Azure Devops Engineer)

=====================================Introduce=================================

Project Waterfall-Model:

Project Planning:
    Requirements:
        Analysis:
            Design:
                Coding:
                    Testing:
                        Deployment

Advantages:
    >Clear demarcation between one phase and another
    >The requirements can be solidified up front.
    >It gives the Project Manager a clear insight into aspects such as delivery dates, cost estimates etc.

Disadvantages:
    >The customer might get to see the end product only
    >Changes in scope
    >Bugs in the testing phase

Project Agile:
it's like a cycle:
>Requirements
>Design
>Develop
>Test
>Deploy
>Review

In software development, agile practices include requirements discovery and solutions improvement
through the collaborative effort of self-organizing and cross and cross-functional teams with their customer(s)/end user(s),
adaptive planning, evolutionary development, early delivery, continual improvement, and flexible responses to changes in requirements, capacity, and understanding
of the problems to be solved

Project Scrum:

This is an agile development methodology

User Story - This is a feature that the user wants. This is written from the users perspectives.

Product Backlog - This is the list of items that need to be done. The list is based off the requirements, features,
enhancements. This is normally managed by the product owner or the product manager.

Items are taken from the Product Backlog and then assigned to a sprint. The sprint is normally a duration of 2 weeks. The items assigned to the sprint are made part of the sprint backlog.

Sprint Review - Here the team showcases what was done in the sprint.
Here the decision can be made as to whether the deliverable should be promoted to production.

Sprint Restropective - The team comes together to see what worked and what did not work.

Azure Boards:

This tool used to create your organization and project architecture.

Users:

Access Levels:
>Basic - This provides most of the features within Azure DevOps which excludes Azure Test Plans.
>Basic + Test Plans - This give access Basic Plan+Test plans.
>Stakeholder - This is a free access but has limitations. Limited access to Azure Boards and  Pipelines. No access to code repositories.
>Visual Studio - This depends on the Visual Studio subscription assigned to the user.

Dashboards:

This tool used to monitor in graphic way, the work process of project
Important dashboard widgets:
>Burndown - These charts focus on the remaining work within a specified period of time
>Cycle time - This defines the time taken to close a work item after work on it has started
>Lead time - This defines the time taken to close a work item after it was created
>Velocity - This tracks the team's capacity to deliver work sprint after sprint

Permissions:

When a user is added to Azure DevOps, they are added to a default security group
Permissions can be assigned at an organization, project or object level.

Default Security groups:
Project:
>Build Administrators
>Contributors
>Project Administrators
>Project Valid Users
>Readers
>Release Administrators
>TeamName Team

Organization or Collection:
>Project Collection Administrators
>Project Collection Build Administrators
>Project Collection Build Service Accounts
>Project Collection Proxy Service Accounts
>Project Collection Service Accounts
>Project Collection Test Service Accounts
>Project Collection Valid Users
>Project-Scoped Users
>Security

==============================================
Git
==============================================

There are types of git merging:
>Fast-forward merge: do not change main branch, only make changes in the feature branch and merge this to the main
>ORT merge: when we make commits to main at the same time with feature branch and then merge, main branch with commits and feature.
>Squash merge: uses for reduce commits to one specific commit

Tagging

It can be used to specify which commit is important in the repository.
You can mark release points with the use of tags.
Two types of tags - lightweight and annotated.
Lightweight tag is just a pointer to a specific commit.

Annotated:
These are stored as full objects in the Git database.
These are checksummed, they contain the tagger name, the email and date, have a message.
It can also be signed and verified with GNU Privacy Guard.

Useful command:
>git gc - (to cleanup your repo) garbage control

Azure pipelines:

Training commit!

Continuous Integration:

Automatically building and testing code every time a team member commits code changes to version control.
Ours local machine

Build Example:
In Visual Studio, when we run an app a build of the app in conducted first.

The build tool builds the project and the dependencies into a set of binaries.
The binaries can then run on the target machine with the help of the .NET runtime.

Azure pipelines:

Build and test your code projects.
Supports: Python, Java, PHP, Ruby, C#.
You can use Azure pipelines for both continuous integration and continuous delivery
You can deploy your app to multiple targets or environments.